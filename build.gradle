
buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'http://files.minecraftforge.net/maven' }
        maven { url 'http://repo.spongepowered.org/maven' }
        maven { url 'https://www.jitpack.io' }
    }

    dependencies {
        //classpath 'com.github.Chocohead:ForgeGradle:jitpack-SNAPSHOT'
        classpath 'com.github.Salandora:ForgeGradle:jitpack-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
    maven { url 'https://www.dimdev.org/maven/' }
    maven { url 'https://masa.dy.fi/maven' }
}

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

minecraft {
    version = config.minecraft_version
    mappings = config.mappings_version
    runDir = 'minecraft'
    makeObfSourceJar = false
    tweakClass = 'org.dimdev.riftloader.launch.RiftLoaderClientTweaker'

    ext.mod_version = config.mod_version

    if (mod_version.endsWith('-dev')) {
        mod_version = mod_version + "." + new Date().format('yyyyMMdd.HHmmss')
    }

    replaceIn "Reference.java"
    replace "@MOD_VERSION@", mod_version
}

dependencies {
    implementation 'fi.dy.masa.malilib:malilib-rift-' + config.minecraft_version_out + ':' + config.malilib_version + ':deobf'
    //implementation 'com.github.Chocohead:Rift:jitpack-aeee80c1fb-1:dev'
    implementation 'com.github.Salandora:Rift:jitpack-SNAPSHOT:dev'
}

/*
sourceSets {
    main {
        ext.refMap = 'mixins.' + config.mod_id + '.refmap.json'
    }
}
*/

group = config.group + config.mod_id // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = config.mod_file_name + '-' + config.minecraft_version_out
version = project.minecraft.mod_version

/**
 * This section allows you to customise the generated litemod.json file
 */
 /*
litemod {
    json {
        name = config.mod_id
        displayName = config.mod_name
        mcversion = config.minecraft_version
        version = config.mod_version
        author = config.author

        // Uncomment any of the following lines and fill in your own details as required
        //requiredAPIs = [ 'someapi' ]
        //tweakClass = 'name.of.tweaker.here'
        dependsOn = [ 'malilib' ]
        mixinConfigs = [ 'mixins.' + config.mod_id + '.json' ]
    }
}
*/

/**
 * This section allows you to customise your generated jar (litemod) file. By
 * default it includes the generated litemod.json file, however if you prefer to
 * include your own file from resources, simply remove the line below.
 */
jar {
    // Remove the "-mc1.12" suffix from the file name
    //classifier = ""
    // Don't append a 'mod-' filename prefix >_>
    baseName = archivesBaseName

    //from litemod.outputs

    /*
    manifest.mainAttributes (
        'Built-By': System.properties['user.name'],
        'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        'Implementation-Title': config.mod_id,
        'Implementation-Version': project.version
    )
    */
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, 'mixins.' + config.mod_id + '.refmap.json'
}

//tasks.withType(Jar)*.baseName = archivesBaseName

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_version", project.minecraft.mod_version
    inputs.property "minecraft_version", project.config.minecraft_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'mod_version': project.minecraft.mod_version, 'minecraft_version': project.config.minecraft_version
    }
      
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
